{
  "name": "git-branch-manager",
  "displayName": "Git Branch Manager",
  "description": "Efficiently manage and clean up local Git branches in VS Code",
  "version": "1.1.0",
  "publisher": "git-branch-manager",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/git-branch-manager"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "git",
    "branch",
    "cleanup",
    "manager",
    "version control"
  ],
  "activationEvents": [
    "onCommand:gitBranchManager.refresh",
    "onCommand:gitBranchManager.deleteSelected",
    "onCommand:gitBranchManager.selectAll",
    "onCommand:gitBranchManager.deselectAll",
    "onCommand:gitBranchManager.checkout",
    "onCommand:gitBranchManager.pullCurrent",
    "onCommand:gitBranchManager.pullBranch",
    "onCommand:gitBranchManager.showBranchMenu",
    "onCommand:gitBranchManager.renameBranch",
    "onView:gitBranchesView"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gitBranchManager.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "gitBranchManager.deleteSelected",
        "title": "Delete Selected Branches",
        "icon": "$(trash)"
      },
      {
        "command": "gitBranchManager.selectAll",
        "title": "Select All",
        "icon": "$(check-all)"
      },
      {
        "command": "gitBranchManager.deselectAll",
        "title": "Deselect All",
        "icon": "$(close-all)"
      },
      {
        "command": "gitBranchManager.checkout",
        "title": "Checkout",
        "icon": "$(arrow-right)",
        "category": "Git Branch Manager"
      },
      {
        "command": "gitBranchManager.toggleSelection",
        "title": "Toggle Selection"
      },
      {
        "command": "gitBranchManager.pullCurrent",
        "title": "Pull Current Branch",
        "icon": "$(cloud-download)"
      },
      {
        "command": "gitBranchManager.pullBranch",
        "title": "Pull",
        "icon": "$(cloud-download)",
        "category": "Git Branch Manager"
      },
      {
        "command": "gitBranchManager.showBranchMenu",
        "title": "Show Branch Menu",
        "icon": "$(kebab-vertical)"
      },
      {
        "command": "gitBranchManager.renameBranch",
        "title": "Rename",
        "icon": "$(edit)",
        "category": "Git Branch Manager"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "gitBranchesView",
          "name": "Git Branches",
          "icon": "$(git-branch)",
          "contextualTitle": "Git Branch Manager",
          "visibility": "collapsed"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "gitBranchManager.refresh",
          "when": "view == gitBranchesView",
          "group": "navigation@1"
        },
        {
          "command": "gitBranchManager.pullCurrent",
          "when": "view == gitBranchesView",
          "group": "navigation@2"
        },
        {
          "command": "gitBranchManager.selectAll",
          "when": "view == gitBranchesView",
          "group": "navigation@3"
        },
        {
          "command": "gitBranchManager.deselectAll",
          "when": "view == gitBranchesView",
          "group": "navigation@4"
        },
        {
          "command": "gitBranchManager.deleteSelected",
          "when": "view == gitBranchesView",
          "group": "navigation@5"
        }
      ],
      "view/item/context": [
        {
          "command": "gitBranchManager.checkout",
          "when": "view == gitBranchesView && viewItem == branch",
          "group": "1_actions@1"
        },
        {
          "command": "gitBranchManager.pullBranch",
          "when": "view == gitBranchesView && (viewItem == branch || viewItem == currentBranch)",
          "group": "1_actions@2"
        },
        {
          "command": "gitBranchManager.renameBranch",
          "when": "view == gitBranchesView && (viewItem == branch || viewItem == currentBranch)",
          "group": "1_actions@3"
        }
      ],
      "view/item/inline": [
        {
          "command": "gitBranchManager.pullBranch",
          "when": "view == gitBranchesView && (viewItem == branch || viewItem == currentBranch)",
          "group": "inline@1"
        },
        {
          "command": "gitBranchManager.renameBranch",
          "when": "view == gitBranchesView && (viewItem == branch || viewItem == currentBranch)",
          "group": "inline@2"
        }
      ]
    },
    "configuration": {
      "title": "Git Branch Manager",
      "properties": {
        "gitBranchManager.confirmBeforeDelete": {
          "type": "boolean",
          "default": true,
          "description": "Show confirmation dialog before deleting branches"
        },
        "gitBranchManager.sortBy": {
          "type": "string",
          "default": "name",
          "enum": [
            "name",
            "date"
          ],
          "description": "Sort branches by name or modification date"
        }
      }
    },
    "keybindings": [
      {
        "command": "gitBranchManager.checkout",
        "key": "alt+c",
        "when": "view == gitBranchesView && viewItem == branch"
      },
      {
        "command": "gitBranchManager.pullBranch",
        "key": "alt+p",
        "when": "view == gitBranchesView && (viewItem == branch || viewItem == currentBranch)"
      },
      {
        "command": "gitBranchManager.renameBranch",
        "key": "alt+r",
        "when": "view == gitBranchesView && (viewItem == branch || viewItem == currentBranch)"
      },
      {
        "command": "gitBranchManager.deleteSelected",
        "key": "alt+d",
        "when": "view == gitBranchesView"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish",
    "build": "npm run compile && npx vsce package && mv *.vsix builds/"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "typescript": "^4.9.4"
  }
}
